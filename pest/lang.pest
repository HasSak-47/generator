definitions = {
    SOI ~ (model | enums | end_point)+ ~ EOI
}

model = {
    "model" ~ name ~ model_extension? ~ "{" ~ member_field ~ ("," ~ member_field)* ~ ","? ~ "}"
}

model_extension = @{ ":" ~ name }

enums = {
    "enum" ~ name ~ "{" ~ value ~ ("," ~ value)* ~ ","? ~ "}"
}

end_point = {
    name ~ "(" ~ (member_field ~ ("," ~ member_field)* ~ ","?)? ~ ")" ~ operation_mark ~ path ~ ("->" ~ ty)?
}

operation_mark = ${ "@" ~ operation }
operation      =  { "get" | "post" | "put" }

path = ${ "\"" ~ inner ~ "\"" }

member_field = ${ name ~ " "* ~ ":" ~ " "* ~ ty }
ty           = ${ (map_type | value_type | sum_type | into_type | repr_type | primitive_type | null_type | complex_type) ~ weird_mark* }
into_type    = ${ primitive_type ~ " "* ~ "as" ~ " "* ~ repr_type }

map_type     = ${ "<" ~ " "* ~ primitive_type ~ " "* ~ "," ~ " "* ~ ty ~ " "* ~ ">" }
complex_type = ${ name }

value_type  = ${ value }
sum_type    =  { "(" ~ ty ~ "or" ~ ty ~ ")"}
weird_mark  = ${ (option_mark | array_mark) }
option_mark = @{ "?" }
array_mark  =  { "[" ~ prec? ~ "]" }

repr_type      = ${ repr_root ~ ("_" ~ prec)? }
repr_root      = ${ datetime }

datetime       =  { "datetime" ~ ("@" ~ name)?}

primitive_type = ${ praw | pprec ~ ("_" ~ prec)? }
praw           =  { "bool" }
pprec          =  { "int" | "uint" | "float" | "string" }

null_type = { "null" }

value  = ${ string | int | float | bool }
bool   = @{ "true" | "false" }
float  = @{ sign? ~ (ASCII_DIGIT)+ ~ ("." ~ ASCII_DIGIT*)?}
int    = @{ sign? ~ (ASCII_DIGIT)+}
sign   = @{ "-" | "+"}
name   = @{ ASCII_ALPHA ~ (ASCII_ALPHANUMERIC | "_")+ }
prec   = @{ ASCII_DIGIT+ }
string = ${ "\"" ~ inner ~ "\"" }
inner  = @{ char* }
char   =  {
    !("\"" | "\\") ~ ANY
  | "\\" ~ ("\"" | "\\" | "/" | "b" | "f" | "n" | "r" | "t")
  | "\\" ~ ("u" ~ ASCII_HEX_DIGIT{4})
}

WHITESPACE = _{ " " | "\t" | "\n" }
COMMENT    = _{ "#" ~ (!"\n" ~ ANY)* }
